# This workflow deploys an application to Google Cloud Run when a push is made to the "main" branch
name: Deploy to Cloud Run from Source

on:
  push:
    branches: ["main"]

# Environment variables used throughout the workflow
env:
  PROJECT_ID: romodo-fleets
  SERVICE: fleet-manager
  REGION: asia-northeast2
  PUBLIC_BASE_PATH: "/"

jobs:
  # The setup job prepares the environment for the build and deploy jobs
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
    # Checkout the repository to the runner
    - name: Checkout repository
      uses: actions/checkout@v3

  # The build job builds the application and uploads the build artifact
  build:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository to the runner
    - name: Checkout
      uses: actions/checkout@v3

    # Authenticate to Google Cloud using the provided credentials
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2.1.1
      with:
        credentials_json: ${{ secrets.GCP_CRED_NEW }}

    # Setup Node.js environment with the version specified in package.json
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.2
      with:
        node-version-file: ./package.json
        cache-dependency-path: ./package-lock.json
        check-latest: true

    # Install the latest version of yarn
    - name: Install Yarn
      run: npm install -g yarn@latest
      working-directory: ./

    # Add React and related packages to the project's package.json file
    - name: Add React and related packages to package.json
      run: yarn add react react-dom react-router-dom --dev
      working-directory: ./

    # Install the `pack` tool
    - name: Install `pack` tool
      run: |
        curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.20.0/pack-v0.20.0-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack

    # - name: Configure Docker
    #   # Configure Docker to use gcloud as a credential helper
    #   run: |
    #     echo -n "${{ secrets.GCP_CRED_NEW_ENC}}" | base64 --decode > /tmp/srv.json
    #     gcloud auth activate-service-account 390204966554-compute@developer.gserviceaccount.com --key-file=/tmp/srv.json
    #     gcloud auth configure-docker asia-docker.pkg.dev


    #   # Build and push the Docker image to Google Container Registry
    # - name: Build and Push Docker image
    #   run: |
    #     pack build asia-docker.pkg.dev/${{ env.PROJECT_ID }}:latest --path ./ --builder heroku/buildpacks:20 --publish

      # Build the Node.js app
    - run: npm run build
      working-directory: ./

    # Create a directory for build artifacts
    - run: mkdir -p ./artifacts
      # Generate the gh-build-artifact.tar file
    - name: Generate Artifact
      run: tar -czvf ./artifacts/gh-build-artifact.tar.gz ./dist/

    # Upload the build artifact for use in the deploy job
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: gh-build-artifact.tar.gz
        path: ./artifacts/
        retention-days: 3
        overwrite: false

  # The deploy job deploys the application to Google Cloud Run
  deploy:
    needs: build
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository to the runner
    - name: Checkout
      uses: actions/checkout@v3

    # Download the build artifact
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.2
      with:
        name: gh-build-artifact.tar.gz
        path: ./artifacts/

    # Extract the .tar.gz file
    - name: Extract Artifact
      run: |
        mkdir -p ./artifacts/extracted/
        tar -xzvf ./artifacts/gh-build-artifact.tar.gz -C ./artifacts/extracted/

    - name: Authenticate to Google Cloud
      # Authenticate to Google Cloud using the provided credentials
      id: auth
      uses: google-github-actions/auth@v2.1.1
      with:
        credentials_json: ${{ secrets.GCP_CRED_NEW }}

    # Install the Google Cloud SDK
    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2.1.0
      with:
        project_id: ${{ env.PROJECT_ID }}

    # Use the gcloud CLI to verify the authentication
    - name: Use gcloud CLI
      run: gcloud info

    # Deploy the application to Google Cloud Run
    - name: Configure Docker on gcloud
      run: gcloud auth configure-docker asia-docker.pkg.dev
    - name: Set project in gcloud
      run: gcloud config set project ${{ env.PROJECT_ID }}
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2.2.0
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: asia-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/romodo-frontend:latest
        flags: "--platform managed --set-env-vars=PUBLIC_BASE_PATH=${{ env.PUBLIC_BASE_PATH }} --format json"

    # Print the URL of the deployed application
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
