# This workflow deploys an application to Google Cloud Run when a push is made to the "main" branch
name: Deploy to Cloud Run from Source

on:
  push:
    branches: ["main"]

# Environment variables used throughout the workflow
env:
  PROJECT_ID: romodo-fleets
  SERVICE: fleet-manager
  REGION: asia-northeast2
  PUBLIC_BASE_PATH: "/"

jobs:
  # The setup job prepares the environment for the build and deploy jobs
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      # Checkout the repository to the runner
      - name: Checkout repository
        uses: actions/checkout@v3
     
  # The build job builds the application and uploads the build artifact
  build:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the runner
      - name: Checkout
        uses: actions/checkout@v3
      
      # Setup Node.js environment with the version specified in package.json
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ./romodo-fleet-manager/package.json
          cache-dependency-path: ./romodo-fleet-manager/package-lock.json

      # Setup Go environment
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.0

      # Install the latest version of npm
      - name: Install NPM
        run: npm install -g npm@latest
        working-directory: ./romodo-fleet-manager

      # Install the latest version of Vite
      - name: Install Vite
        run: npm install -g vite@latest
        working-directory: ./romodo-fleet-manager

      # Install React and related packages
      - name: Install React
        run: npm install react react-dom react-router-dom
        working-directory: ./romodo-fleet-manager

      # Install Pack, a tool for building apps using Buildpacks
      - name: Install Pack
        run: |
          sudo wget https://github.com/buildpacks/pack/releases/download/v0.20.0/pack-v0.20.0-linux.tgz
          sudo tar xvfz pack-v0.20.0-linux.tgz -C /tmp
          sudo rm pack-v0.20.0-linux.tgz
          sudo mv /tmp/pack /usr/local/bin/pack
          pack version

      # Build the Node.js app
      - run: npm run build
        working-directory: ./romodo-fleet-manager

      # Create a directory for build artifacts
      - run: mkdir -p ./artifacts

       # Generate the gh-build-artifact.tar file
      - name: Generate Artifact
        run: tar -cvf ./artifacts/gh-build-artifact.tar ./romodo-fleet-manager/dist/

      # Upload the build artifact for use in the deploy job
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: gh-build-artifact.tar
          path: ./artifacts/
          retention-days: 3
          overwrite: false

  # The deploy job deploys the application to Google Cloud Run
  deploy:
    needs: build
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the runner
      - name: Checkout
        uses: actions/checkout@v3

      # Download the build artifact
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.2
        with:
          name: gh-build-artifact.tar
          path: ./artifacts/

      # Authenticate to Google Cloud using the provided credentials
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.1.1
        with:
          credentials_json: ${{ secrets.GCP_CRED_NEW }}

      # Deploy the application to Google Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2.2.0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          source: ./artifacts/gh-build-artifact.tar

      # Print the URL of the deployed application
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}